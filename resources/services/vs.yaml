apiVersion: cloud.tibco.com/v1
kind: TibcoTunnelRoute
metadata:
  name: ${META_DATA_NAME}
  namespace: ${NAMESPACE}
spec:
  selector:
    app.kubernetes.io/name: tcp-client
  endpoint:
    path: /${ENDPOINT}             
    fqdn: ${FQDN}
    config: accesskey
    configVariables:
      ACCESS_KEY_HASH: "${suite.setup.accessKeyHashGeneration.accessKeyHash}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${DEPLOYMENT_NAME}
  namespace: aws-ti-tibco-tcds
  labels:
    app: http                         #introducing a new label-selector bcz in multiple deployment case we can't disinguish b/w the deployments and their pods if not labelled
    app.kubernetes.io/name: tcp-client
    app.cloud.tibco.com/owner: local
spec:
  selector:
    matchLabels:
      app: http 
      app.kubernetes.io/name: tcp-client
  replicas: 3
  template:
    metadata:
      labels:
        app: http
        app.kubernetes.io/name: tcp-client
        app.cloud.tibco.com/owner: local
        app.cloud.tibco.com/tunnel: enabled
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      containers:
        - name: container-agent
          image: 664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/hybrid-server:9 #can we get this image name directly, rather to check using kctl get cm
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          resources: {}       # TODO: request actual resources here
        - name: main
          image: 664529841144.dkr.ecr.us-west-2.amazonaws.com/stratosphere/tcp-client:41  #can we get this image name directly
          resources: {}       # TODO: request actual resources here