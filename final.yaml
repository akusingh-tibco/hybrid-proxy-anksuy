name: dataTransfer

tasks: 

#tibtunnel configuration & verification

  - name: tibTunnelConfigureWithoutProfileName
    type: foreground
    exec:
      timeout: 1m
      script:
        cmd: "/bin/bash"
        args: ["-c", "./tibtunnel configure -a ${suite.setup.accessKeyHashGeneration.accessKeySecret} "]
        #./tibtunnel configure -a <<accessKey>>
        capture:
          stdout:
            - name: output
              match: "((?s).*)"
    expect:
      - name: output
        operator: containsStr
        value: "Configuration for profile 'default' was successfully saved"

  - name: verifyProfileSaved
    type: foreground
    exec:
      timeout: 1m
      script:
        cmd: "/bin/bash"
        args: ["-c", "cd /Users/akusingh/Testing/Tibtunnel_CIC-2 && cat ~/.tibtunnel/credentials"]
        #./tibtunnel configure -a <<accessKey>>
        capture:
          stdout:
            - name: output
              match: "((?s).*)"
    expect:
      - name: output
        operator: containsStr
        value: "${suite.setup.accessKeyHashGeneration.accessKeySecret}"
        
#final status of our deployed tibcotunnelroute specific
  - name: state_of_tibcotunnelroute
    type: foreground
    exec: 
      timeout: 1m
      script: 
        cmd: "kubectl"
        args: ["get", "tibcotunnelroute", "${META_DATA_NAME}", "-n", "${NAMESPACE}", "-o", "json"]
        capture: 
          stdout: 
            - name : status_cr
              matchType: jsonpath
              match: "{.status.resource.state}"
    expect:
      - name: status
        operator: equal
        value: 0
      - name: status_cr
        operator: containsStr
        value: "processed"

# get all pods running for the specific deployment using labels for that deployment or shall we use for namespace ???
  - name: status_of_all_client-pods
    type: foreground
    exec: 
      timeout: 1m
      script: 
        cmd: "kubectl"
        args: ["get", "pods", "-n", "${NAMESPACE}", "-o", "json", "--selector=app=http"]
        capture:
          stdout:
            - name: running_state
              matchType: jsonpath
              match: "{.items[*].status.phase}"
            - name: capture_pod_name
              matchType: jsonpath
              match: "{.items[0].metadata.name}"

    expect:
      - name: status
        operator: equal
        value: 0
      - name: running_state
        operator: contains
        value: "Running"

#start tibtunnel 
  - name: tibtunnelConnect
    type: background
    exec:
      #timeout: 1m
      script:
        cmd: "/bin/bash"
        args: ["-c", "timeout 30s ./tibtunnel connect -d --remote-debug -s 8081:localhost:8081 https://${FQDN}/${ENDPOINT} -l ./tibtunnelLog" ]

#start tcp-server 
  - name: startServer
    type: background
    exec:
      #timeout: 1m
      script:
        cmd: "/bin/bash"
        args: ["-c", "timeout 30s ./tcp-server -d -a localhost:8081 >> ./tcpserverLog"]
        capture:
          stdout:
            - name: output
              match: "((?s).*)"
          stderr:
            - name: stderr
              match: "((?s).*)"
    expect:
      - name: stderr
        operator: containsStr
        value: "TCP server started"

#data transfer within the pods
  - name: sendData
    type: foreground
    timeout: 3m
    exec:
      timeout: 1m
      script:
        cmd: "kubectl"
        args: ["exec", "${status_of_all_client-pods.capture_pod_name}", "-naws-ti-tibco-tcds", "-c", "main", "--", "/test/tcp-client", "-a", "localhost:8081"]
        capture:
          stdout:
            - name: output
              match: "((?s).*)"
          stderr:
            - name: stderr
              match: "((?s).*)"              
    expect:
      - name: stderr
        operator: containsStr
        value: "Successfully send/received 1.0KiB"
    repeat:
      count: 0
      sleep: 5s               
  - name: sleepCommand
    type: foreground
    exec:
      script:
        cmd: "sleep"
        args: ["20"]
